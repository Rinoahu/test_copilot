simd.cpp:42:9: remark: completely unrolled loop with 8 iterations [-Rpass=loop-unroll]
        for(i=0; i<N; i+=M)
        ^
simd.cpp:22:16: remark: loop not vectorized: call instruction cannot be vectorized [-Rpass-analysis=loop-vectorize]
        x[i] = rand();
               ^
simd.cpp:20:5: remark: loop not vectorized: instruction cannot be vectorized [-Rpass-analysis=loop-vectorize]
    for(i=0; i<N; i++)
    ^
simd.cpp:20:5: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
simd.cpp:50:24: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Backward loop carried data dependence. Memory location is the same as accessed at simd.cpp:50:38 [-Rpass-analysis=loop-vectorize]
                x[i+k] = max(x[i+k], x[i+k-1]-1);
                       ^
simd.cpp:45:13: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
            for(k=1; k<M; k++)
            ^
simd.cpp:50:24: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Backward loop carried data dependence. Memory location is the same as accessed at simd.cpp:50:38 [-Rpass-analysis=loop-vectorize]
                x[i+k] = max(x[i+k], x[i+k-1]-1);
                       ^
simd.cpp:45:13: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
            for(k=1; k<M; k++)
            ^
simd.cpp:50:24: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Backward loop carried data dependence. Memory location is the same as accessed at simd.cpp:50:38 [-Rpass-analysis=loop-vectorize]
                x[i+k] = max(x[i+k], x[i+k-1]-1);
                       ^
simd.cpp:45:13: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
            for(k=1; k<M; k++)
            ^
simd.cpp:50:24: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Backward loop carried data dependence. Memory location is the same as accessed at simd.cpp:50:38 [-Rpass-analysis=loop-vectorize]
                x[i+k] = max(x[i+k], x[i+k-1]-1);
                       ^
simd.cpp:45:13: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
            for(k=1; k<M; k++)
            ^
simd.cpp:50:24: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Backward loop carried data dependence. Memory location is the same as accessed at simd.cpp:50:38 [-Rpass-analysis=loop-vectorize]
                x[i+k] = max(x[i+k], x[i+k-1]-1);
                       ^
simd.cpp:45:13: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
            for(k=1; k<M; k++)
            ^
simd.cpp:50:24: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Backward loop carried data dependence. Memory location is the same as accessed at simd.cpp:50:38 [-Rpass-analysis=loop-vectorize]
                x[i+k] = max(x[i+k], x[i+k-1]-1);
                       ^
simd.cpp:45:13: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
            for(k=1; k<M; k++)
            ^
simd.cpp:50:24: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Backward loop carried data dependence. Memory location is the same as accessed at simd.cpp:50:38 [-Rpass-analysis=loop-vectorize]
                x[i+k] = max(x[i+k], x[i+k-1]-1);
                       ^
simd.cpp:45:13: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
            for(k=1; k<M; k++)
            ^
simd.cpp:50:38: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
                x[i+k] = max(x[i+k], x[i+k-1]-1);
                                     ^
simd.cpp:45:13: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
            for(k=1; k<M; k++)
            ^
simd.cpp:57:65: remark: SLP vectorized with cost -1 and with tree size 3 [-Rpass=slp-vectorizer]
    int time_used=1000000*(end.tv_sec-start.tv_sec)+(end.tv_usec-start.tv_usec);
                                                                ^
simd.cpp:45:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
            for(k=1; k<M; k++)
            ^
simd.cpp:45:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:45:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:45:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:45:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:45:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:45:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:45:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
serial compiled
simd.cpp:41:9: remark: completely unrolled loop with 8 iterations [-Rpass=loop-unroll]
        #pragma omp simd
        ^
simd.cpp:22:16: remark: loop not vectorized: call instruction cannot be vectorized [-Rpass-analysis=loop-vectorize]
        x[i] = rand();
               ^
simd.cpp:20:5: remark: loop not vectorized: instruction cannot be vectorized [-Rpass-analysis=loop-vectorize]
    for(i=0; i<N; i++)
    ^
simd.cpp:20:5: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
simd.cpp:44:13: remark: vectorized loop (vectorization width: 8, interleaved count: 4) [-Rpass=loop-vectorize]
            #pragma omp simd
            ^
simd.cpp:44:13: remark: vectorized loop (vectorization width: 8, interleaved count: 4) [-Rpass=loop-vectorize]
simd.cpp:44:13: remark: vectorized loop (vectorization width: 8, interleaved count: 4) [-Rpass=loop-vectorize]
simd.cpp:44:13: remark: vectorized loop (vectorization width: 8, interleaved count: 4) [-Rpass=loop-vectorize]
simd.cpp:44:13: remark: vectorized loop (vectorization width: 8, interleaved count: 4) [-Rpass=loop-vectorize]
simd.cpp:44:13: remark: vectorized loop (vectorization width: 8, interleaved count: 4) [-Rpass=loop-vectorize]
simd.cpp:44:13: remark: vectorized loop (vectorization width: 8, interleaved count: 4) [-Rpass=loop-vectorize]
simd.cpp:50:38: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis]
                x[i+k] = max(x[i+k], x[i+k-1]-1);
                                     ^
simd.cpp:44:13: remark: loop not vectorized (Force=true) [-Rpass-missed=loop-vectorize]
            #pragma omp simd
            ^
simd.cpp:57:65: remark: SLP vectorized with cost -1 and with tree size 3 [-Rpass=slp-vectorizer]
    int time_used=1000000*(end.tv_sec-start.tv_sec)+(end.tv_usec-start.tv_usec);
                                                                ^
simd.cpp:44:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
            #pragma omp simd
            ^
simd.cpp:44:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:44:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:44:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:44:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:44:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:44:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd.cpp:44:13: remark: unrolled loop by a factor of 2 [-Rpass=loop-unroll]
simd compiled
serial
time_used=7819011
PI=2145077232
simd
time_used=3834299
PI=2145077232
